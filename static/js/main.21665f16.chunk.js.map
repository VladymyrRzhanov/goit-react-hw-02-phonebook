{"version":3,"sources":["components/Form/Form.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/App/App.module.css","components/Button/Button.module.css","components/Button/Button.js","components/Form/Form.js","components/Section/Section.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","type","className","s","button","Form","state","id","name","number","handleInputChange","e","currentTarget","value","setState","uuidv4","handleSubmit","onSubmit","props","preventDefault","reset","this","form","inputContainer","subtitle","input","pattern","title","required","onChange","Component","Section","children","section","container","ContactsList","contacts","onDelete","list","map","item","onClick","data","Filter","filter","onFilterName","label","App","initialContacts","onSubmitHandler","some","includes","alert","getFilterName","normalizedContact","toLowerCase","contact","deleteContact","filteredContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21665f16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1gKc5\",\"inputContainer\":\"Form_inputContainer__2x2ha\",\"input\":\"Form_input__1_Oa2\",\"subtitle\":\"Form_subtitle__2Saxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsList_contacts__3HEWP\",\"item\":\"ContactsList_item__3SUf4\",\"name\":\"ContactsList_name__13WqV\",\"button\":\"ContactsList_button__3uCGW\",\"data\":\"ContactsList_data__2O6Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2ziPp\",\"title\":\"Filter_title__3h5r0\",\"input\":\"Filter_input__1TyLv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__fB5vl\",\"container\":\"Section_container__1C1YJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__AOh7l\",\"subtitle\":\"App_subtitle__1vMbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__BmdKb\"};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from \"./Button.module.css\";\r\n\r\nconst Button = ({type}) => (\r\n    <button className={s.button} type={type}>\r\n    </button>\r\n)\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from \"../Button\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n    id: '',\r\n    name: '',\r\n    number: ''\r\n  };\r\n  \r\n    handleInputChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({\r\n            id: uuidv4(),\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        const { onSubmit } = this.props;\r\n        e.preventDefault();\r\n        onSubmit(this.state);\r\n        this.reset()\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            id: '',\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className={s.form}>\r\n                <label className={s.inputContainer}>\r\n                    <span className={s.subtitle}>Name</span>\r\n                    <input className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </label>\r\n                <label className={s.inputContainer}>\r\n                    <span className={s.subtitle}>Number</span>\r\n                    <input className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={number}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </label>\r\n                <Button type={\"submit\"} className={\"button\"}/>\r\n            </form>\r\n        );\r\n    };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ children }) => (\r\n    <section className={s.section}>\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>\r\n    </section>\r\n)\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from \"./ContactsList.module.css\";\r\n\r\nconst ContactsList = ({ contacts, onDelete }) =>\r\n    <div className={s.contacts}>\r\n        <ul className={s.list}>{\r\n    contacts.map(({ id, name, number }) =>\r\n        <li key={id} className={s.item}>\r\n            <button className={s.button} type=\"button\" onClick={() => onDelete(id)}></button>\r\n            <div className={s.data}>\r\n                <span className={s.name}>{name}:</span>\r\n                <span className={s.number}>{number}</span>\r\n            </div>\r\n            \r\n        </li>\r\n    )\r\n    }\r\n    </ul>\r\n    </div>\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n    }).isRequired,).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactsList;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from \"./Filter.module.css\";\r\n\r\n\r\nconst Filter = ({ filter, onFilterName }) => (\r\n    <label className={s.label}>\r\n        <span className={s.title}>Find contacts by name:</span>\r\n        <input className={s.input} type=\"text\" value={filter} onChange={onFilterName}/>\r\n    </label>\r\n)\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onFilterName: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport Form from \"../Form\";\r\nimport Section from \"../Section\";\r\nimport ContactsList from \"../ContactsList\";\r\nimport Filter from \"../Filter\";\r\nimport initialContacts from \"../ContactsList/initialContacts.json\";\r\nimport s from './App.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: ''\r\n  };\r\n  \r\n  onSubmitHandler = data => {\r\n    const { contacts } = this.state;\r\n    (!contacts.some(({ name }) => name.includes(data.name)) ?\r\n      this.setState(({ contacts }) => ({\r\n        contacts: [data, ...contacts]\r\n      })) : alert(`${data.name} is already in contacts`))\r\n  };\r\n  \r\n\r\n  onFilterName = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getFilterName = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedContact = filter.toLowerCase();\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedContact));\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContact = this.getFilterName();\r\n    return (\r\n      <>\r\n        <Section>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n          <Form onSubmit={this.onSubmitHandler} />\r\n        </Section>\r\n        <Section>\r\n          <h2 className={s.subtitle}>Contacts</h2>\r\n          <Filter filter={filter} onFilterName={this.onFilterName}/>\r\n          <ContactsList contacts={filteredContact} onDelete={this.deleteContact} />\r\n        </Section>\r\n      </>\r\n    )\r\n  };\r\n};\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}